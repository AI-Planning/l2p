(define (domain test_domain)
    (:requirements :conditional-effects :disjunctive-preconditions :equality :negative-preconditions :strips :typing :universal-preconditions)
    (:types table - location arm block - manipulatable_object)
    (:predicates (clear ?b - block)  (empty ?a - arm)  (holding ?a - arm ?b - block)  (on_table ?b - block))
    (:action pickup
        :parameters (?arm - arm ?block - block ?table - table)
        :precondition (and (empty ?arm) (clear ?block) (on_table ?block ?table))
        :effect (and (holding ?arm ?block) (not (empty ?arm)) (not (clear ?block)) (not (on_table ?block ?table)))
    )
     (:action putdown
        :parameters (?arm - arm ?block - block ?table - table)
        :precondition (and (holding ?arm ?block) (on_table ?block ?table) (clear ?block))
        :effect (and (empty ?arm) (on_table ?block ?table) (clear ?block) (not (holding ?arm ?block)))
    )
     (:action stack
        :parameters (?top - block ?bottom - block)
        :precondition (and (holding ?top) (clear ?bottom))
        :effect (and (not (holding ?top)) (not (clear ?bottom)) (on_table ?top))
    )
     (:action unstack
        :parameters (?arm - arm ?top_block - block ?bottom_block - block)
        :precondition (and (empty ?arm) (clear ?top_block))
        :effect (and (holding ?arm ?top_block) (not (clear ?top_block)) (not (holding ?arm ?bottom_block)) (clear ?bottom_block))
    )
)