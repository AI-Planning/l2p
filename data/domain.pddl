(define (domain test_domain)
    (:requirements :conditional-effects :disjunctive-preconditions :equality :negative-preconditions :strips :typing :universal-preconditions)
    (:types arm block table - object)
    (:predicates (arm_empty ?a - arm)  (clear ?b - block)  (holding ?a - arm ?b - block)  (on ?top - block ?bottom - block)  (on_table ?b - block))
    (:action pickup
        :parameters (?a - arm ?b - block)
        :precondition (and (arm_empty ?a) (clear ?b) (on_table ?b))
        :effect (and (not (on_table ?b)) (not (clear ?b)) (holding ?a ?b) (not (arm_empty ?a)))
    )
     (:action putdown
        :parameters (?a - arm ?b - block ?t - table)
        :precondition (and (holding ?a ?b) (not (on_table ?b)))
        :effect (and (not (holding ?a ?b)) (on_table ?b) (clear ?b) (arm_empty ?a))
    )
     (:action stack
        :parameters (?a - arm ?top - block ?bottom - block)
        :precondition (and (holding ?a ?top) (clear ?bottom))
        :effect (and (not (holding ?a ?top)) (arm_empty ?a) (on ?top ?bottom) (not (clear ?bottom)) (clear ?top))
    )
     (:action unstack
        :parameters (?a - arm ?top - block ?bottom - block)
        :precondition (and (arm_empty ?a) (clear ?top) (on ?top ?bottom))
        :effect (and (holding ?a ?top) (not (on ?top ?bottom)) (clear ?bottom) (not (arm_empty ?a)))
    )
)