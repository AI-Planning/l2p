(define (domain test_domain)
    (:requirements :conditional-effects :disjunctive-preconditions :equality :negative-preconditions :strips :typing :universal-preconditions)
    (:types arm block table - object)
    (:predicates (clear ?b - block)  (empty) (holding ?b - block)  (on ?b1 - block ?b2 - block)  (on-table ?b - block))
    (:action Pickup
        :parameters (?b - block)
        :precondition (and (clear ?b) (empty) (on-table ?b))
        :effect (and (holding ?b) (not (clear ?b)) (not (on-table ?b)))
    )
     (:action Putdown
        :parameters (?b - block)
        :precondition (holding ?b)
        :effect (and (clear ?b) (on-table ?b) (empty))
    )
     (:action Stack
        :parameters (?b1 - block ?b2 - block)
        :precondition (and (holding ?b2) (clear ?b1))
        :effect (and (on ?b2 ?b1) (not (clear ?b1)) (empty))
    )
     (:action Unstack
        :parameters (?b1 - block ?b2 - block)
        :precondition (and (empty) (clear ?b2) (on ?b2 ?b1))
        :effect (and (holding ?b2) (clear ?b1) (not (on ?b2 ?b1)))
    )
)