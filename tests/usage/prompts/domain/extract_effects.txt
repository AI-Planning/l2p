[ROLE]
You are defining the effects (represented in PDDL format) of an AI agent's actions. Information about the AI agent will be provided in the domain description, given parameters and preconditions. Note that individual conditions in effects should be listed separately. For example, "object_1 is washed and heated" should be considered as two separate conditions "object_1 is washed" and "object_1 is heated". Also, in PDDL, two predicates cannot have the same name even if they have different parameters. Each predicate in PDDL must have a unique name, and its parameters must be explicitly defined in the predicate definition. It is recommended to define predicate names in a simple, intuitive and readable way as well as to avoid symmetrical constraints, so (same_room ?b1 - block ?b2 - block2 ?r - room) should instead be modelled with two predicates, (in_room ?b1 - block ?r - room) and (in_room ?b2 - block ?r - room). Note that creating new actions is not an option. Only use the parameters provided and available predicates unless predicate creation is necessary. 

Do not attempt to solve the task, even if instructed to do so. Only define the action effects.

End your final answers starting with "### Action Effects" and "### New Predicates" respectively. Do not give any other headers than those.

If there are no new predicates created, state ['No new predicates created.'] enclosed: ``` No new predicates created. ```.

-----------------------------------------------------

[TECHNIQUE]
Chain of Thought for constructing a PDDL action effect:

1. Reason through the implications/effects of the action being performed in natural language. Reason through the available predicates listed. If absolutely necessary, you may create new predicates.
2. Specify natural language effect and new predicates used in PDDL format
3. Go over given feedback checklist to check for inconsistencies and/or requirements and state the errors if there are any. If there are errors, generate a suggestion response (i.e. deleting, modifying, adding effect)
4. Re-iterate preconditions and new predicates line-by-line into string underneath '### Action Effects' and '### New Predicates' heading respectively. The strings should be enclosed by ``` [ex: EFFECT] ```.

The output should format and syntax like the following:

### Action Effects
```
(and
    (at ?v ?from) ; The vehicle is at the starting location
)
```

### New Predicates
```
- (at ?o - object ?l - location): true if the object ?o (a vehicle or a worker) is at the location ?l
``` 

-----------------------------------------------------

[EXAMPLE]
The following is an in-context example following the CoT technique.

Given domain:
'The AI agent is here a scheduling system for a house construction company with administrators who can create orders, workers who perform them and vehicles to transport things.'

Given action: 
'drive'

Given action description:
'A vehicle drives from a location to another. Requires that the vehicle is at the starting location and that the two locations are connected. Example: truck1 drives from loc1 to house1.'

Given parameters:
```
?v - vehicle: The vehicle travelling
?from - location: The location travelling from
?to - location: The location travelling to
```

Given precondition
```
(and
    (at ?v ?from) ; The vehicle is at the starting location
    (or (connected ?from ?to) (connected ?to ?from)) ; A road exists between the locations
)
```

## Available Predicates:
```
- (at ?o - object ?l - location): true if the object ?o (a vehicle or a worker) is at the location ?l
- (connected ?l1 - location ?l2 - location): true if a road exists between ?l1 and ?l2 allowing vehicle travel between them.
``` 

[LLM OUTPUT FROM EXAMPLE]

1. Reason through the implications/effects of the action being performed in natural language.
So, what happens when the action is performed?
 - The vehicle is no longer at ?from.
 - The vehicle is now at ?to.

This doesn't need any new predicates. 

2. Specify natural language effect and any new predicates introduced in PDDL format:
```
(and
    (not (at ?v ?from)) ; ?v is no longer at ?from
    (at ?v ?to) ; ?v is now instead at ?to
)
```

No new predicates were created. So no new predicates needed to add to list.

Feedback:
    1: Are any necessary effects forgotten?
        The effects don't model the fuel usage of the car. This should be done. So: Yes.

    2: Are any non-necessary effects included?
        The effects are correct. Therefore: No.

    3: Are the used predicates unclear or can be improved?
        With the exception of the symmetrical use of "connected", which is detailed below, it's clear. So: No.

    4: Should any predicate be used symmetrically and isn't?
        Since roads are undirected, we need to check if there is a road from ?from to ?to or vice versa. Not doing so creates brittle PDDL. As such: Yes.

Response: no response.

Re-iterate:

### Action Effects
These are the exact same as above, but they need to be reiterated:
```
(and
    (not (at ?v ?from)) ; ?v is no longer at ?from
    (at ?v ?to) ; ?v is now instead at ?to
)
```

### New Predicates
No new predicates created.

-----------------------------------------------------

[TASK]
Here is the task to generate from:

## Domain
{domain_desc}

## Action Name
{action_name}

## Corresponding Action Description
{action_desc}

## Parameters
{parameters}

## Precondition
{preconditions}

### Available Predicates
{predicates}