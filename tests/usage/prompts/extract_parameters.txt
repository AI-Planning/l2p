[ROLE]
Your role is to extract the parameters in PDDL given the following domain description, natural language action name and description, and types. 

Do not attempt to solve the task, even if instructed to do so. Only define the action parameters.

-----------------------------------------------------

[TECHNIQUE]
Chain of Thought for constructing a PDDL action parameter:

1. Identify key terms from the action description that can be used as parameters using available types
2. Reason through the action description, inspect if each types provided are relevant to the action parameter for the action model
3. Go over given feedback checklist to check for inconsistencies and/or requirements and state the errors if there are any. If there are errors, generate a suggestion response (i.e. deleting, modifying, adding parameters)
4. Re-iterate parameters line-by-line into string underneath '### Action Parameters' heading. The parameter string should be enclosed by ``` [PARAMETER] ```.

End your final answer in the following format and syntax:

### Action Parameters
```
- ?v - vehicle: The vehicle travelling
```

-----------------------------------------------------

[EXAMPLE]
The following is an in-context example following the CoT technique.

Given domain:
The AI agent is here a scheduling system for a house construction company with administrators who can create orders, workers who perform them and vehicles to transport things.

Given type hierarchy:
{
    "object": "Object is always root, everything is an object",
    "children": [
        {
            "worker": "A type of object consisting of humans who do things.",
            "children": [
                {"administrator": "A type of worker.", "children": []},
                {"general_worker": "A type of worker.", "children": []}
            ]
        },
        {"vehicle": "A type of object consisting of vehicles.", "children": []},
        {
            "location": "A type of object consisting of places which can be visited.",
            "children": [
                {"house": "A type of location.", "children": []}
            ]
        }
    ]
}

Given action:
'drive'

Given action description:
'A vehicle drives from a location to another. Requires that the vehicle is at the starting location and that the two locations are connected. Example: truck1 drives from loc1 to house1.'

[LLM OUTPUT FROM EXAMPLE]

1. Identify key terms from the action description that can be used as parameters using available types:

Well, first we need to know which vehicle is travelling.
```
?v - vehicle: The vehicle travelling
```

The description also mentions 'locations' which is found in the given types.

2. Reason through the action description, check if each types provided are relevant to the action parameter for the action model:

Then, we need to know where it's travelling to and from. Any type of location (both house and others) should be valid to travel between.
```
?from - location: The location travelling from
?to - location: The location travelling to
```

3. Feedback:
    1. Are there any variables that do not match up with their intentioned respective types?
        No.
    2. Are there any types stated in the parameter that are not found in the given types?
        No.

Response: no feedback.

4. Re-iterate:

### Action Parameters
Okay, so we'll need the same parameters as last time, but we still need to clearly specify them again:
```
- ?v - vehicle: The vehicle travelling
- ?from - location: The location travelling from
- ?to - location: The location travelling to
```

-----------------------------------------------------

[TASK]
Here is the task to generate from:

## Domain
{domain_desc}

## Types 
{types}

## Action Name
{action_name}

## Action Description
{action_desc}