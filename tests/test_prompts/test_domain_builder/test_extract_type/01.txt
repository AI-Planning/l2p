LLM Chain of Thought Reasoning (example)
1. Understand the Domain Entities:
    In the Blocksworld domain, the primary objects involved are:
    - A mechanical arm that manipulates the blocks.
    - Blocks that can be stacked on other blocks or placed on a table.
    - A table that serves as the base where blocks can be placed.

2. Determine Relationships Between Entities:
    - The mechanical arm is used to interact with blocks.
    - Blocks can exist in two states: stacked on another block or placed on the table.
    - The table acts as the root surface for blocks but does not stack on anything else.

3. Establish Hierarchy in JSON Representation:
    - Start with a root entity, which encapsulates all the components (in this case, "Object").
    - Add child entities (mechanical arm, block, table) under the root.
    - For each child, add a short description and any children if hierarchical relationships exist.

4. Create JSON Output:
    - Translate the entities and relationships into a structured JSON format.
    - Each component is represented as an object, with "children" to handle potential nested relationships.

5. Verification:
    - Ensure the JSON structure adheres to the intended hierarchy and is properly formatted for parsing.

## OUTPUT
```
{
    "object": "Object is always root, everything is an object",
    "children": [
        {"arm": "mechanical arm that picks up and stacks blocks on other blocks or table.", "children": []},
        {"block": "colored block that can be stacked or stacked on other blocks or table.", "children": []},
        {"table": "surface where the blocks can be placed on top of.", "children": []}
    ]
}
```